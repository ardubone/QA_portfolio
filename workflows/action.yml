name: TalkAboutAll-work

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python

        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r backend/requirements.txt
      - name: Test with flake8
        run: |
          python -m flake8

  frontend_build_and_push:
    name: Build and Push Frontend
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: talkaboutall4ever/talk_about_frontend:latest
          file: frontend/Dockerfile

  backend_build_and_push:
    name: Build and Push Backend
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: talkaboutall4ever/talk_about_backend:latest
          file: backend/Dockerfile

  copy_compose:
    name: Copy compose
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "infra/docker-compose.yaml"
          target: "."
          strip_components: 1

  copy_nginx_conf:
    name: Copy nginx config
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "infra/nginx.conf"
          target: "nginx"
          strip_components: 1

  deploy:
    runs-on: ubuntu-latest
    needs: backend_build_and_push
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}

          script: |
            sudo docker-compose stop
            sudo docker-compose rm backend
            sudo touch .env
            echo DATABASE_NAME: ${{ secrets.DATABASE_NAME }} > .env
            echo DATABASE_USER: ${{ secrets.DATABASE_USER }} >> .env
            echo DB_PASS: ${{ secrets.DB_PASS }} >> .env
            echo DB_HOST: ${{ secrets.DB_HOST }} >> .env
            echo DB_PORT: ${{ secrets.DB_PORT }} >> .env
            echo EMAIL_HOST: ${{ secrets.EMAIL_HOST }} >> .env
            echo EMAIL_PORT: ${{ secrets.EMAIL_PORT }} >> .env
            echo EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }} >> .env
            echo EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
            echo DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }} >> .env
            echo SECRET_KEY:  ${{ secrets.DJANGO_KEY }} >> .env
            echo MEDIA_URL: /${{ secrets.MEDIA_URL }} >> .env
            sudo docker pull talkaboutall4ever/talk_about_backend:latest
            sudo docker-compose up -d

  # send_message:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #     - name: send message
  #       uses: appleboy/telegram-action@master
  #       with:
  #         to: ${{ secrets.TELEGRAM_TO }}
  #         token: ${{ secrets.TELEGRAM_TOKEN }}
  #         message: ${{ github.workflow }} успешно выполнен!
